package aplikasi.penjualan.netbeans.k03;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.Connection;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.awt.event.ActionEvent; 
import java.util.Date;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author SMKI Utama9
 */
public final class BarangMasuk_Ananda extends javax.swing.JFrame {
   private DefaultTableModel model;
   String data[] = new String[6];
    /**
     * Creates new form BarangMasuk_Ananda
     */
    public BarangMasuk_Ananda() {
        initComponents();
        model = (DefaultTableModel) table.getModel();
        loadData();
        Date date = new Date();
        SetEditOff(); 
        TanggalOtomatis(); 
        TampilComboBarang(); 
        TampilComboPetugas(); 
        TampilComboDistributor(); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        KodeBarang = new javax.swing.JComboBox<>();
        NamaBrng = new javax.swing.JTextField();
        HargaJual = new javax.swing.JTextField();
        Stok = new javax.swing.JTextField();
        Jumlah = new javax.swing.JTextField();
        SubTotal = new javax.swing.JTextField();
        Hitung = new javax.swing.JButton();
        AddItem = new javax.swing.JButton();
        TglMasuk = new javax.swing.JTextField();
        NoNota = new javax.swing.JTextField();
        IdDistributor = new javax.swing.JComboBox<>();
        NamaDistributor = new javax.swing.JTextField();
        KotaAsal = new javax.swing.JTextField();
        CariData = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        AddNew = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        Total = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        IdPetugas = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        NamaPetugas = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tanggal Barang Masuk");

        jLabel2.setText("No Nota");

        jLabel4.setText("ID Distributor");

        jLabel5.setText("Nama Distributor");

        jLabel6.setText("Kota Asal");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Barang"));

        jLabel7.setText("Kode Barang");

        jLabel8.setText("Nama Barang");

        jLabel9.setText("Harga Jual");

        jLabel10.setText("Stok");

        jLabel11.setText("Jumlah");

        jLabel12.setText("Sub Total Rp");

        KodeBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Kode Barang", " " }));
        KodeBarang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                KodeBarangItemStateChanged(evt);
            }
        });
        KodeBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KodeBarangActionPerformed(evt);
            }
        });

        Stok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StokActionPerformed(evt);
            }
        });

        SubTotal.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                SubTotalCaretUpdate(evt);
            }
        });

        Hitung.setText("Hitung");
        Hitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HitungActionPerformed(evt);
            }
        });

        AddItem.setText("Add Item");
        AddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HargaJual)
                            .addComponent(NamaBrng)
                            .addComponent(Stok))))
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SubTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(Jumlah))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Hitung)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11)
                    .addComponent(KodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hitung))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(NamaBrng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(HargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(AddItem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        IdDistributor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pilih distributor", " " }));
        IdDistributor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                IdDistributorItemStateChanged(evt);
            }
        });

        CariData.setText("Cari Data");
        CariData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CariDataActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        AddNew.setText("Add New");
        AddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNewActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel13.setText("Total Rp");

        Total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalActionPerformed(evt);
            }
        });

        jLabel14.setText("ID Petugas");

        IdPetugas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Petugas" }));
        IdPetugas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                IdPetugasItemStateChanged(evt);
            }
        });

        jLabel15.setText("Nama Petugas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TglMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(IdDistributor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(NoNota, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(NamaDistributor)
                                            .addComponent(KotaAsal))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CariData)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel14)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(IdPetugas, 0, 149, Short.MAX_VALUE)
                                    .addComponent(NamaPetugas)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddNew)
                                    .addComponent(jButton3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(save)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(TglMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NoNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CariData)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(IdDistributor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(IdPetugas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(NamaDistributor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(NamaPetugas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(KotaAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddNew)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(save)
                            .addComponent(jLabel13)
                            .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 15, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        java.util.Date tglsekarang = new java.util.Date();
        String nonota = NoNota.getText();
        //String namapetugas = cmbptgs.getSelectedItem().toString();
        String jumlah = Jumlah.getText();
        String total = Total.getText();
        String iddistributor = IdDistributor.getSelectedItem().toString();
        String idpetugas = IdPetugas.getSelectedItem().toString();
        //String KD = cmbkd.getSelectedItem().toString();
        // ...
        if (tglsekarang == null || nonota.isEmpty() || jumlah.isEmpty() || total.isEmpty() || iddistributor.isEmpty() || idpetugas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harap Lengkapi Data", "Error", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                Connection c = koneksi.getkoneksi();
                String sql = "INSERT INTO tblbrgmasuk ( nonota, tglmasuk, iddistributor, idpetugas, total) VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement p = c.prepareStatement(sql);

                p.setString(1, nonota);
                p.setDate(2, new java.sql.Date(tglsekarang.getTime()));
                p.setString(3, iddistributor);
                p.setString(4, idpetugas);
                p.setString(5, jumlah);
                p.setString(6, total);

                p.executeUpdate();
                JOptionPane.showMessageDialog(null, "Berhasil ditambah");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            } finally {
                 loadData(); 
                 kosong(); 
                 
                 AddNew.setEnabled(true);
            }
        }   
    }//GEN-LAST:event_saveActionPerformed

    private void CariDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CariDataActionPerformed
        // TODO add your handling code here:
//                    try { 
//     Connection kon =  DriverManager.getConnection("db_penjualan_barang_pas_xiia", "root", "");
//     Statement  stt = kon.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, 
//     ResultSet.CONCUR_UPDATABLE); 
//     String     SQL = "SELECT * FROM tblbrgmasuk where nonota='"+NoNota.getText().toString()+"'"; 
//     ResultSet  res = stt.executeQuery(SQL); 
//     res.absolute(1); 
//     TglMasuk.setText(res.getString("tglmasuk")); 
//     IdPetugas.setSelectedItem(res.getString("idpetugas")); 
//     IdDistributor.setSelectedItem(res.getString("iddistributor")); 
//     Total.setText(res.getString("total")); 
//     TampilGridDetail(); 
//     save.setEnabled(false); 
//     NoNota.setEnabled(false); 
//     CariData.setEnabled(false); 
//             } catch (SQLException ex) { 
//        }  

    }//GEN-LAST:event_CariDataActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(JOptionPane.showConfirmDialog(null,"This application will be close \n if you press button OK","Information",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE)==JOptionPane.OK_OPTION) 
            this.dispose(); 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void AddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemActionPerformed
        String nonota=NoNota.getText();
        String kbrg = KodeBarang.getSelectedItem().toString();
        String jumlah = Jumlah.getText();
        
         double d, e;   
            d = Double.parseDouble(SubTotal.getText());  
            e = Double.parseDouble(Total.getText());  
            e = e+d;   
            Total.setText(String.valueOf(e));
       
        if ((nonota.isEmpty()) | (kbrg.isEmpty()) |(jumlah.isEmpty())) {
            JOptionPane.showMessageDialog(null,"data tidak boleh kosong, silahkan dilengkapi");
        }else {
            try{
                
                Connection kon = koneksi.getkoneksi();
                Statement stt = kon.createStatement();
                String SQL = "insert into tbldetailbrgmasuk values('"+NoNota.getText()+"',"+
                "'"+KodeBarang.getSelectedItem()+"',"+
                "'"+Jumlah.getText()+"',"+
                "'"+Total.getText()+"')";
                stt.executeUpdate(SQL);
               
                Connection kon1 = koneksi.getkoneksi();
                Statement stt1 = kon.createStatement();
                String SQL1 = "Update tblbarang Set stok=stok - '"+Jumlah.getText()+"'" +
                "Where KodeBarang='"+KodeBarang.getSelectedItem().toString()+"'";
                stt1.executeUpdate(SQL1);
               
                data[0] = KodeBarang.getSelectedItem().toString();
                data[1] = NamaBrng.getText();
                data[2] = HargaJual.getText();
                data[3] = Stok.getText();
                data[4] = Jumlah.getText();
                data[5] = Total.getText();
                model.insertRow(0, data);
                
                
        
                KodeBarang.requestFocus();
        
                stt.close();
                KodeBarang.requestFocus();
                AddItem.setEnabled(false);
                save.setEnabled(true);
                BersihDetail();
                KodeBarang.requestFocus();
                
            } catch(Exception ex){
                 System.out.println("Terjadi Error"+ex.getMessage());
            }
        }
    }//GEN-LAST:event_AddItemActionPerformed

    private void AddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNewActionPerformed
        // TODO add your handling code here:
          SetEditOn(); 
          NoNota.requestFocus(); 
          BersihData();
    }//GEN-LAST:event_AddNewActionPerformed

    private void HitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HitungActionPerformed

        int a, b, c;
        
        a = Integer.parseInt(HargaJual.getText());
        b = Integer.parseInt(Jumlah.getText());
        c = a*b;

        SubTotal.setText(Integer.toString(c)); 
    }//GEN-LAST:event_HitungActionPerformed

    private void KodeBarangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_KodeBarangItemStateChanged
                try{
            String sql ="SELECT * FROM tblbarang WHERE KodeBarang='" + KodeBarang.getSelectedItem().toString()+"'";
            
            Connection c = koneksi.getkoneksi();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            
            r.absolute(1);
            NamaBrng.setText(r.getString("NamaBarang"));
            HargaJual.setText(r.getString("HargaJual"));
            Stok.setText(r.getString("stok"));
        }catch(SQLException ex){
     
        }
                 Jumlah.requestFocus(); 
                 AddItem.setEnabled(true);
    }//GEN-LAST:event_KodeBarangItemStateChanged

    private void SubTotalCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_SubTotalCaretUpdate
        
    }//GEN-LAST:event_SubTotalCaretUpdate

    
    private void IdDistributorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_IdDistributorItemStateChanged
          try{
        String sql ="SELECT * FROM tbldistributor WHERE IDDistributor='" + IdDistributor.getSelectedItem().toString()+"'";
            
        Connection c = koneksi.getkoneksi();
        Statement s = c.createStatement();
        ResultSet r = s.executeQuery(sql);
            
        r.absolute(1);
        NamaDistributor.setText(r.getString("NamaDistributor"));
        KotaAsal.setText(r.getString("KotaAsal"));
        }catch(SQLException ex){
     
        }
    }//GEN-LAST:event_IdDistributorItemStateChanged

    private void IdPetugasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_IdPetugasItemStateChanged
        // TODO add your handling code here:
               try{
        String sql ="SELECT * FROM tblpetugas WHERE IDPetugas='" + IdPetugas.getSelectedItem().toString()+"'";
            
        Connection c = koneksi.getkoneksi();
        Statement s = c.createStatement();
        ResultSet r = s.executeQuery(sql);
            
        r.absolute(1);
        NamaPetugas.setText(r.getString("NamaPetugas"));
        }catch(SQLException ex){
     
        }
    }//GEN-LAST:event_IdPetugasItemStateChanged

    private void KodeBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KodeBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KodeBarangActionPerformed

    private void StokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StokActionPerformed

    private void TotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalActionPerformed

    private void kosong(){
        NoNota.setText(null);
        TglMasuk.setText(null);
        NamaPetugas.setText(null);
        NamaBrng.setText(null);
        HargaJual.setText(null);
        Stok.setText(null);
        Jumlah.setText(null);
        Total.setText(null);
        IdDistributor.setSelectedIndex(0);
        KodeBarang.setSelectedIndex(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BarangMasuk_Ananda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BarangMasuk_Ananda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BarangMasuk_Ananda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BarangMasuk_Ananda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BarangMasuk_Ananda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItem;
    private javax.swing.JButton AddNew;
    private javax.swing.JButton CariData;
    private javax.swing.JTextField HargaJual;
    private javax.swing.JButton Hitung;
    private javax.swing.JComboBox<String> IdDistributor;
    private javax.swing.JComboBox<String> IdPetugas;
    private javax.swing.JTextField Jumlah;
    private javax.swing.JComboBox<String> KodeBarang;
    private javax.swing.JTextField KotaAsal;
    private javax.swing.JTextField NamaBrng;
    private javax.swing.JTextField NamaDistributor;
    private javax.swing.JTextField NamaPetugas;
    private javax.swing.JTextField NoNota;
    private javax.swing.JTextField Stok;
    private javax.swing.JTextField SubTotal;
    private javax.swing.JTextField TglMasuk;
    private javax.swing.JTextField Total;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton save;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

private void loadData() {
    model = new DefaultTableModel();
    model.getDataVector().removeAllElements();
    model.fireTableDataChanged();
    table.setModel(model);

    model.addColumn("Kode Barang");
    model.addColumn("Nama Barang");
    model.addColumn("Harga Jual");
    model.addColumn("Stok");
    model.addColumn("Jumlah");
    model.addColumn("Sub Total");

    try {
        String sql = "SELECT tbldetailbrgmasuk.nonota, tbldetailbrgmasuk.KodeBarang, tbldetailbrgmasuk.Jumlah, tbldetailbrgmasuk.SubTotal, " +
            "tblbarang.NamaBarang, tblbarang.HargaJual, tblbarang.Stok " +
            "FROM tbldetailbrgmasuk " +
            "INNER JOIN tblbarang ON tbldetailbrgmasuk.KodeBarang = tblbarang.KodeBarang " +
            "WHERE tbldetailbrgmasuk.nonota = '" + NoNota.getText() + "'";

        Connection kon = koneksi.getkoneksi();
        Statement s = kon.createStatement();
       // preparedStatement.setString(1, txtnonota.getText());

        ResultSet rs = s.executeQuery(sql);

        while (rs.next()) {
            String nonota = rs.getString("nonota");
            String kodeBarang = rs.getString("KodeBarang");
            String namaBarang = rs.getString("NamaBarang");
            String hargaJual = rs.getString("HargaJual");
            String stok = rs.getString("Stok");
            String jumlah = rs.getString("Jumlah");
            String subtotal = rs.getString("SubTotal");

            model.addRow(new Object[]{nonota, kodeBarang, namaBarang, hargaJual, stok, jumlah, subtotal});
        }

        rs.close();
        s.close();
       // kon.close();
    } catch (SQLException ex) {
        System.out.println("Terjadi Error: " + ex.getMessage());
    }
}

            public void BersihData(){ 
                model.setRowCount(0); 
                NoNota.setText(""); 
                IdDistributor.setSelectedIndex(0); 
                NamaPetugas.setText(""); 
                IdPetugas.setSelectedIndex(0); 
                NamaDistributor.setText(""); 
                KotaAsal.setText(""); 
                KodeBarang.setSelectedIndex(0); 
                NamaBrng.setText("");    
                HargaJual.setText(""); 
                Jumlah.setText(""); 
                Stok.setText(""); 
                SubTotal.setText("0"); 
                Total.setText("0"); 
             }
            
            public void BersihDetail(){ 
                KodeBarang.setSelectedIndex(0); 
                NamaBrng.setText("");   
                HargaJual.setText(""); 
                Stok.setText(""); 
                Jumlah.setText(""); 
                SubTotal.setText("0"); 
            }
            
              public void SetEditOff(){ 
                    NoNota.setEnabled(false); 
                    TglMasuk.setEnabled(false); 
                    IdDistributor.setEnabled(false); 
                    IdPetugas.setEnabled(false); 
                    KodeBarang.setEnabled(false); 
                    Jumlah.setEnabled(false); 
                    Hitung.setEnabled(false); 
                    CariData.setEnabled(false); 
                    AddItem.setEnabled(false); 
                } 
              
              public void SetEditOn(){ 
                NoNota.setEnabled(true); 
                TglMasuk.setEnabled(true); 
                IdDistributor.setEnabled(true); 
                IdPetugas.setEnabled(true); 
                KodeBarang.setEnabled(true); 
                Jumlah.setEnabled(true); 
                save.setEnabled(true); 
                CariData.setEnabled(true); 
                Hitung.setEnabled(true); 
                AddItem.setEnabled(true); 
            }

              public void TampilComboPetugas(){ 
                try{
            String sql = "SELECT * FROM tblpetugas";
            
            Connection c = koneksi.getkoneksi();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            
            while(r.next()){
                IdPetugas.addItem(r.getString("IDPetugas"));
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    public void TampilComboDistributor(){ 
            try {      
         String sql = "SELECT * FROM tbldistributor";
            
         Connection c = koneksi.getkoneksi();
         Statement s = c.createStatement();
         ResultSet r = s.executeQuery(sql); 
         while(r.next()){ 
         IdDistributor.addItem(r.getString("IDDistributor")); 
                } 
                    } catch (SQLException ex) { 
                    } 
                } 
              
 public void TampilComboBarang(){ 
    try {      
         String sql = "SELECT * FROM tblbarang";
            
         Connection c = koneksi.getkoneksi();
         Statement s = c.createStatement();
         ResultSet r = s.executeQuery(sql); 
         while(r.next()){ 
         KodeBarang.addItem(r.getString("KodeBarang")); 
                } 
                    } catch (SQLException ex) { 
                    } 
                } 
             
             public void TanggalOtomatis(){ 
                Date tanggal = new Date(); 
                TglMasuk.setText(""+ (String.format("%1$td:%1$tb:%1$tY",tanggal))); 
  }
             private javax.swing.table.DefaultTableModel getDefaultTabelModel() { 
                return new javax.swing.table.DefaultTableModel( 
                new Object[][] {}, 
                new String [] {"Kode Barang","Nama Barang","Harga Jual","Stok","Jumlah","Sub Total"} 
                ){ 
                boolean[] canEdit = new boolean[]{ 
                false, false, false, false 
                }; 
                public  boolean isCellEditable(int  rowIndex, int columnIndex){ 
                return canEdit[columnIndex]; 
                } 
                };    
                } 

   
}
